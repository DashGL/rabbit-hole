---
import Story from "@layouts/Story.astro";
import { Image } from "astro:assets";

import placeholder from "@assets/scenes/placeholder.png";

import Dashie from "@components/Dashie.astro";
import Kion from "@components/Kion.astro";

const images: string[] = [];
for (let i = 0; i < 12; i++) {
    const num = i.toString().padStart(2, "0");
    images.push(`/storyboard/astroids-${num}.png`);
}
---

<Story>
    <Image
        class="rounded-lg"
        src={placeholder}
        alt="Kion falls into the Digital World"
    />
    <h1>Astroids</h1>

    <h2>Story</h2>
    <p>
        Dashie: <Dashie>This is my line</Dashie>
    </p>
    <p>
        Kion: <Kion>This is my line</Kion>
    </p>

    <h2>Concept</h2>
    <Image
        class="rounded-lg"
        src={placeholder}
        alt="Title screen for brickout game with SDL on linux"
    />

    <h2>Program</h2>

    <ol>
        <li>
            <strong>Loading Game Assets</strong>
            <img src={images[0]} />
            <ul>
                <li>
                    Load images for the player, asteroids, bullets, and
                    background.
                </li>
                <li>Set up texture loading with SDL.</li>
            </ul>
        </li>
        <li>
            <strong>Creating the Title Screen</strong>
            <img src={images[1]} />
            <ul>
                <li>Display a title graphic.</li>
                <li>Implement a start button.</li>
            </ul>
        </li>
        <li>
            <strong>Implementing the Game Loop</strong>
            <img src={images[2]} />
            <img src={images[3]} />
            <img src={images[4]} />

            <ul>
                <li>
                    Handle user input (arrow keys for movement, spacebar for
                    shooting).
                </li>
                <li>Update the player's position.</li>
                <li>
                    Update the asteroid positions and handle asteroid splitting.
                </li>
                <li>
                    Handle collision detection between player, bullets, and
                    asteroids.
                </li>
                <li>Render the player, asteroids, bullets, and background.</li>
            </ul>
        </li>
        <li>
            <strong>Handling Player Movement</strong>
            <img src={images[5]} />

            <ul>
                <li>Move the player forward and rotate left/right.</li>
            </ul>
        </li>
        <li>
            <strong>Handling Player Shooting</strong>
            <img src={images[6]} />
            <ul>
                <li>
                    Allow the player to shoot bullets in the direction they are
                    facing.
                </li>
                <li>Create and manage a bullet pool to reuse bullets.</li>
            </ul>
        </li>
        <li>
            <strong>Implementing Asteroid Movement</strong>
            <img src={images[7]} />
            <ul>
                <li>Move asteroids in random directions.</li>
                <li>Split asteroids into smaller pieces when shot.</li>
            </ul>
        </li>
        <li>
            <strong>Ending the Game</strong>
            <img src={images[8]} />
            <ul>
                <li>
                    End the game when the player is destroyed by an asteroid.
                </li>
                <li>Display a game over message.</li>
            </ul>
        </li>
        <li>
            <strong>Scoring</strong>
            <img src={images[9]} />
            <ul>
                <li>Keep track of and display the player's score.</li>
                <li>Increment the score for each asteroid destroyed.</li>
            </ul>
        </li>
        <li>
            <strong>Creating Success Screen</strong>
            <img src={images[10]} />
            <ul>
                <li>
                    Display a success message when all asteroids are destroyed.
                </li>
                <li>Provide an option to restart the game.</li>
            </ul>
        </li>
    </ol>
</Story>
